using System;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;

public class Basket : MonoBehaviour
{
    public List<GameObject> itemsInBasket;
    public bool isSnapped;
    public bool collidingWithTrigger;
    public Gripper gripper;

    void Start()
    {
        gripper = GameObject.Find("Gripper").GetComponent<Gripper>();
        itemsInBasket = new List<GameObject>();
        isSnapped = false;
    }

    void Update()
    {
        // Check if the space key is pressed
        if (Input.GetKeyDown(KeyCode.Space))
        {
            PrintItems();
        }
    }

    void OnTriggerEnter(Collider other)
    {
        if (other.gameObject.tag == "Grippable")
        {
            itemsInBasket.Add(other.gameObject);
            if (other.transform.parent != gripper.transform)
            {
                other.transform.SetParent(transform);
            }
            Debug.Log($"Item {other.gameObject.name} entered the basket");
        }
        else if (other.gameObject.GetComponent<Counter>() != null)
        {
            PrintItems();
        }
    }

    void OnTriggerExit(Collider other)
    {
        if (other.gameObject.tag == "Grippable")
        {
            itemsInBasket.Remove(other.gameObject);
            // Only remove the parent if the object is not being gripped by the gripper
            if (other.transform.parent == transform)
            {
                other.transform.SetParent(null); // Remove the item from the basket's hierarchy
            }
            Debug.Log($"Item {other.gameObject.name} left the basket");
        }
    }
    public void PrintItems()
    {
        List<string> itemsToPrint = new List<string>();
        foreach (GameObject item in itemsInBasket)
        {  
            itemsToPrint.Add(item.name);
        }
        Debug.Log($"Items in the basket: {string.Join(", ", itemsToPrint)}");
    }
    public List<GameObject> GetItems()
    {
        return itemsInBasket;
    }

    public void SetSnapped(bool snapped)
    {
        isSnapped = snapped;
    }
}