using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Counter : MonoBehaviour
{
    public Dictionary<string, int> Mission = new Dictionary<string, int>();
    public Dictionary<string, float> Price = new Dictionary<string, float>();
    public GameObject BasketObject;
    public Basket Basket;

    // Start is called before the first frame update
    void Start()
    {

        Basket = BasketObject.GetComponent<Basket>();
    }

    // Update is called once per frame
    void Update()
    {
        
    }

    public void CreateMission(List<string> Items)
    {

        System.Random random = new System.Random();
        int numberOfItems = random.Next(1, Items.Count + 1);

        for (int i = 0; i < numberOfItems; i++)
        {
            string product = Items[random.Next(Items.Count)];
            int quantity = random.Next(1, 10);

            if (!Mission.ContainsKey(product))
            {
            Mission.Add(product, quantity);
            }
        }

        foreach (var item in Mission)
        {
            Items.Add($"{item.Key}: {item.Value}");
        }
    }


    public void Checkout(List<string> Items)
    {
        if (VerifyMissionCompletion(Items))
        {
            float totalPrice = CalculateTotalPrice(Items);
            Debug.Log($"Total price: {totalPrice}");
        }
        else
        {
            Debug.Log("Mission not completed.");
        }

    }

    public bool VerifyMissionCompletion(List<string> Items)
    {
        foreach (var missionItem in Mission)
        {
            if (!Items.Contains($"{missionItem.Key}: {missionItem.Value}"))
            {
                Debug.Log("Mission not completed.");
                return false;
            }
        }
        return true;
    }

    public float CalculateTotalPrice(List<string> Items)
    {
        float totalPrice = 0f;

        foreach (var item in Items)
        {
            string[] parts = item.Split(':');
            string productName = parts[0].Trim();
            int quantity = int.Parse(parts[1].Trim());

            if (Price.ContainsKey(productName))
            {
                totalPrice += Price[productName] * quantity;
            }
        }

        return totalPrice;
    }
}
